// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.DataAccess;

#nullable disable

namespace backend.DataAccess.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20230212194737_CreateTables")]
    partial class CreateTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.DataAccess.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TwoFactorCode")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72883c2c-028a-4d09-ae08-db208395f19e"),
                            Email = "razvan-andrei.canuci@student.tuiasi.ro",
                            UserId = new Guid("e72cab11-bd2e-4a60-87f4-da6f36ca3b11")
                        });
                });

            modelBuilder.Entity("backend.DataAccess.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasCheckConstraint("CK_Users_Role", "\"Role\" IN ('User','Admin')");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e72cab11-bd2e-4a60-87f4-da6f36ca3b11"),
                            Password = "ga+Becy7NiRjVuzZOH2DhKeE0LlVqNNPWLbD7kMOfgXgqbULUXU+A++ei3++tGjduVAH3KcCFC3sbcfAo40qww==",
                            Role = "Admin",
                            Username = "vasiletraian"
                        },
                        new
                        {
                            Id = new Guid("631017b9-67a2-4e9f-9942-a45251883a1d"),
                            Password = "clTO2Kc2f3IwgARSm23CZPxtE02F93Sh8mIUbmwq6ge72mbUE0zvm8350O64z/5pJNJnzK3NeFM0s/VniMRmJQ==",
                            Role = "User",
                            Username = "traianelemer"
                        });
                });

            modelBuilder.Entity("backend.DataAccess.Entities.Admin", b =>
                {
                    b.HasOne("backend.DataAccess.Entities.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("backend.DataAccess.Entities.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Admin");
                });
#pragma warning restore 612, 618
        }
    }
}
